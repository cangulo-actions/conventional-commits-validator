name: ðŸ›ž continuous-integration

on:
  pull_request:
    branches: [main]

concurrency:  # concurrency set to avoid conflicts pushing to CrazyActionsTests repo
  group: e2e-tests
  cancel-in-progress: false

env:
  GH_E2E_user: cangulo-cc-e2e-test[bot]
  GH_E2E_email: cangulo-cc-e2e-test[bot]@users.noreply.github.com

jobs:
  validate-commits:
    name: validate commits
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Validate Conventional Commits using the current branch
        uses: ./
        id: validate-commits

  get-changes:
    name: ðŸ”Ž Get Changes
    uses: ./.github/workflows/shared-get-changes.yml

  lint-code:
    name: ðŸ•º Lint Code
    needs: get-changes
    if: needs.get-changes.outputs.js-modified == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: install packages
        run: npm install --only=dev

      - name: validate code style (eslint)
        run: npm run lint

      - name: explain how to fix code style
        if: failure()
        env:
          ESLINT_TUTORIAL: https://mojitocoder.medium.com/how-to-add-code-linting-for-a-node-js-project-b210d8759cd5
        run: |
          echo "# CI failed validating code style"    >> $GITHUB_STEP_SUMMARY
          echo "To fix the code style, run:"          >> $GITHUB_STEP_SUMMARY
          echo "npm run lint-fix"                     >> $GITHUB_STEP_SUMMARY
          echo "[ESLINT Tutorail]($ESLINT_TUTORIAL)"  >> $GITHUB_STEP_SUMMARY

  test-JS:
    name: ðŸ§ª JS Tests
    needs: get-changes
    if: needs.get-changes.outputs.js-modified == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: install packages
        run: npm install

      - name: run JS tests (UT and index.js)
        run: npm run test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JS Tests  # Name of the check run which will be created
          path: reports/jest-*.xml
          reporter: jest-junit

  prepare-test-e2e:
    name: ðŸ¥¡ zip cypress tests
    needs: get-changes
    if: needs.get-changes.outputs.action-modified == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout cc repository
        uses: actions/checkout@v4.1.1

      - name: create cypress artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: cypress
          path: cypress

  # tests are executed in the cangulo-actions/CrazyActionsTests repo
  test-e2e:
    name: "e2e-cypress: ${{ matrix.scenario }}"
    needs:
      - prepare-test-e2e
      - get-changes
    if: needs.get-changes.outputs.action-modified == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - scenario: ðŸš¬ smoke tests
            spec: cypress/e2e/smoke-test.feature
            branch-to-create: smoke

          - scenario: Invalid Commit Type
            spec: cypress/e2e/invalid-commit-type.feature
            branch-to-create: invalid-commit-type

          - scenario: Invalid Commit Msg
            spec: cypress/e2e/invalid-commit-msg.feature
            branch-to-create: invalid-commit-msg

          - scenario: Invalid scope
            spec: cypress/e2e/invalid-commit-scope.feature
            branch-to-create: invalid-commit-scope

          - scenario: Valid Commit Types
            spec: cypress/e2e/valid-commit-types.feature
            branch-to-create: valid-commit-types

          - scenario: Valid Scopes
            spec: cypress/e2e/valid-commit-scopes.feature
            branch-to-create: valid-commit-scopes

    env:
      CYPRESS_GH_TOKEN: ${{ secrets.GH_AUTOMATION_TOKEN }}
      CYPRESS_GH_API_URL: https://api.github.com/repos/cangulo-actions/CrazyActionsTests
      CYPRESS_WAIT_TIME_CI_WORKFLOW: 25000  # wait 25 seconds before checking the CD workflow
      CYPRESS_API_RETRY_INTERVAL_MS: 10000  # retry every 10 seconds
      CYPRESS_API_RETRY_TIMEOUT_MS: 40000   # timeout after 40 seconds of retry
      CYPRESS_CC_BRANCH: ${{ github.head_ref }}
      CYPRESS_CC_PR_NUMBER: ${{ github.event.number }}
      CYPRESS_BRANCH_TO_CREATE: test-cc-pr-${{ github.event.number }}-${{ matrix.branch-to-create }}
    steps:
      - name: Checkout cangulo-actions/CrazyActionsTests repository
        uses: actions/checkout@v4.1.1
        with:
          repository: cangulo-actions/CrazyActionsTests
          ref: main
          token: ${{ secrets.GH_AUTOMATION_TOKEN }}

      - name: configure git credentials
        run: |
          git config user.name  "${{ env.GH_E2E_user }}"
          git config user.email "${{ env.GH_E2E_email }}"

      - name: ðŸ¥¡ Download cypress artifact
        uses: actions/download-artifact@v4.1.0
        with:
          name: cypress
          path: cypress-cc

      - name: move cypress folder to root
        run: |
          rm -rf cypress                        # remove any local cypress folder
          mv cypress-cc/* . --force --verbose   # move cypress from artifact to root

      - name: ðŸ§ª e2e tests
        uses: cypress-io/github-action@v6.6.0
        with:
          spec: ${{ matrix.spec }}

  clean-repo-after-e2e:
    name: ðŸ§¹ Clean repo after e2e tests if failure
    needs: test-e2e
    if: >
      always() && needs.test-e2e.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: GitHub Script
        uses: actions/github-script@v7.0.1
        env:
          OWNER: cangulo-actions
          REPO: CrazyActionsTests
          BRANCH_PREFIX: test-cc-pr-
        with:
          github-token: ${{ secrets.GH_AUTOMATION_TOKEN }}
          script: |
            const owner         = process.env.OWNER
            const repo          = process.env.REPO
            const branchPrefix  = process.env.BRANCH_PREFIX

            const response = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open'
            })
            const pendingPRs = response.data

            pendingPRs.forEach(async (pr) => {
              if (pr.head.ref.startsWith(branchPrefix)) {
                console.log(`Closing PR: number: ${pr.number} - title: ${pr.title}`)
                await github.rest.pulls.update({
                  owner,
                  repo,
                  pull_number: pr.number,
                  state: 'closed'
                })

                // delete its branch
                console.log(`Deleting branch: ${pr.head.ref}`)
                await github.rest.git.deleteRef({
                  owner,
                  repo,
                  ref: `heads/${pr.head.ref}`
                })
              }
            })
          